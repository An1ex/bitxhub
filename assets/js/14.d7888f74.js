(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{360:function(s,a,t){"use strict";t.r(a);var e=t(42),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"bitxhub使用文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bitxhub使用文档"}},[s._v("#")]),s._v(" BitXHub使用文档")]),s._v(" "),t("h2",{attrs:{id:"准备工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[s._v("#")]),s._v(" 准备工作")]),s._v(" "),t("p",[s._v("BitXHub使用"),t("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("golang")]),t("OutboundLink")],1),s._v("开发，版本要求1.13以上。")]),s._v(" "),t("p",[s._v("如果你想在本地或者服务器上运行BitXHub，你需要在机器上安装有以下的依赖：")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/gobuffalo/packr",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("packr")]),t("OutboundLink")],1),s._v("、"),t("a",{attrs:{href:"https://gist.github.com/thiagozs/4276432d12c2e5b152ea15b3f8b0012e#installation",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("gomock")]),t("OutboundLink")],1),s._v("、"),t("a",{attrs:{href:"https://gist.github.com/thiagozs/4276432d12c2e5b152ea15b3f8b0012e#installation",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("mockgen")]),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("可以通过下面的命令，快速安装依赖：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" scripts/prepare.sh\n")])])]),t("h2",{attrs:{id:"编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[s._v("#")]),s._v(" 编译")]),s._v(" "),t("p",[s._v("编译bitxhub：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" build\n")])])]),t("p",[s._v("编译完后，会在"),t("code",[s._v("bin")]),s._v("目录下生成一个"),t("code",[s._v("bitxhub")]),s._v("二进制文件。")]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("version")]),s._v("命令进行验证：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("$ ./bin/bitxhub version\nBitXHub version: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0-master-2bb82e8\nApp build date: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-03-31T00:02:19\nSystem version: darwin/amd64\nGolang version: go1.13.8\n")])])]),t("p",[s._v("如果想直接安装"),t("code",[s._v("bitxhub")]),s._v("到可执行环境，可以使用"),t("code",[s._v("install")]),s._v("命令：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])])]),t("h2",{attrs:{id:"启动solo模式bitxhub"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动solo模式bitxhub"}},[s._v("#")]),s._v(" 启动solo模式bitxhub")]),s._v(" "),t("p",[s._v("使用下面的命令即可启动一个单节点的bitxhub：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" scripts\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" solo.sh\n")])])]),t("p",[s._v("启动成功会打印出BitXHub的ASCII字体：\n")]),t("p",[t("img",{attrs:{src:"https://user-images.githubusercontent.com/29200902/77936225-30cc6400-72e5-11ea-9499-1ead165c5495.png",width:"50%"}})]),t("p"),s._v(" "),t("h2",{attrs:{id:"本地快速启动4节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地快速启动4节点"}},[s._v("#")]),s._v(" 本地快速启动4节点")]),s._v(" "),t("p",[s._v("本地快速启动脚本依赖于"),t("a",{attrs:{href:"https://github.com/tmux/tmux/wiki",target:"_blank",rel:"noopener noreferrer"}},[s._v("tmux"),t("OutboundLink")],1),s._v("，需要提前进行安装。")]),s._v(" "),t("p",[s._v("使用下面的命令克隆项目：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone git@github.com:meshplus/bitxhub.git\n")])])]),t("p",[s._v("BitXHub还依赖于一些小工具，使用下面的命令进行安装：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" bitxhub\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" scripts/prepare.sh \n")])])]),t("p",[s._v("最后，运行下面的命令即可运行一个四节点的BitXHub中继链：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" cluster\n")])])]),t("p",[s._v("启动成功会在四个窗格中分别打印出BitXHub的ASCII字体。")]),s._v(" "),t("p",[t("strong",[s._v("注意：")]),s._v(" "),t("code",[s._v("make cluster")]),s._v("启动会使用"),t("code",[s._v("tmux")]),s._v("进行分屏，所以在命令执行过程中，最好不要进行终端切换。")]),s._v(" "),t("h2",{attrs:{id:"自定义启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义启动"}},[s._v("#")]),s._v(" 自定义启动")]),s._v(" "),t("p",[s._v("首先，使用项目提供的配置脚本快速生成配置文件：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" bitxhub/scripts\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" config.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("number"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" // number是节点数量，\n")])])]),t("p",[s._v("上面命令以生成4个节点配置作为例子，会在当前目录下的build文件夹下生成如下文件：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n├── addresses\n├── agency.cert\n├── agency.priv\n├── bitxhub\n├── ca.cert\n├── ca.priv\n├── node1\n├── node2\n├── node3\n├── node4\n├── pids\n└── raft.so\n")])])]),t("p",[s._v("node1-node4下的文件信息如下：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n├── api\n├── bitxhub.toml\n├── certs\n├── network.toml\n├── order.toml\n├── plugins\n└── start.sh\n")])])]),t("h3",{attrs:{id:"修改端口信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改端口信息"}},[s._v("#")]),s._v(" 修改端口信息")]),s._v(" "),t("p",[s._v("端口的配置主要在"),t("code",[s._v("bitxhub.toml")]),s._v("文件中。")]),s._v(" "),t("p",[t("code",[s._v("port.grpc")]),s._v(" 修改节点的grpc端口")]),s._v(" "),t("p",[t("code",[s._v("port.gateway")]),s._v(" 修改节点的grpc gateway端口")]),s._v(" "),t("p",[t("code",[s._v("port.pprof")]),s._v(" 修改节点的pprof端口")]),s._v(" "),t("h3",{attrs:{id:"修改初始化账号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改初始化账号"}},[s._v("#")]),s._v(" 修改初始化账号")]),s._v(" "),t("p",[t("code",[s._v("addresses")]),s._v("文件中记录了各节点的地址，将里面的地址填写到"),t("code",[s._v("genesis.addresses")]),s._v("中即可。")]),s._v(" "),t("h3",{attrs:{id:"修改网络信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改网络信息"}},[s._v("#")]),s._v(" 修改网络信息")]),s._v(" "),t("p",[s._v("网络配置修改在"),t("code",[s._v("network.toml")]),s._v("中。")]),s._v(" "),t("p",[t("code",[s._v("N")]),s._v("字段修改为节点数量，默认是4个。")]),s._v(" "),t("p",[t("code",[s._v("id")]),s._v("字段代表了节点的顺序id，范围在1-N，节点间不能重复。")]),s._v(" "),t("p",[t("code",[s._v("addr")]),s._v("和"),t("code",[s._v("id")]),s._v("分别是各节点的地址和id，其中"),t("code",[s._v("/ip4/")]),s._v("后填写节点所在服务器的ip地址，"),t("code",[s._v("/tcp/")]),s._v("后填写节点的libp2p端口（端口不重复即可），"),t("code",[s._v("/p2p/")]),s._v("后填写Libp2p的id，具体的值从pids文件中按照顺序获取。")]),s._v(" "),t("h3",{attrs:{id:"启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),t("p",[s._v("启动前，需要将build目录下的bitxhub二进制拷贝到node1-node4目录下，将build目录下的raft.so插件拷贝到node1-node4下的plugins下。")]),s._v(" "),t("p",[s._v("分别进入到node1-node4目录下，执行以下命令即可启动：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" start.sh\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);